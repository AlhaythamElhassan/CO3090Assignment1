version '1.1.0-CO3090CW1'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.1.0'
    }
}

repositories {
    mavenCentral()
}

// Extra variables to keep track of the versions of dependencies.
ext.sourceComp = 1.8
ext.targetComp = 1.8
ext.junit4Version        = '4.12'
ext.junitVintageVersion  = '5.1.0'
ext.junitPlatformVersion = '1.1.0'
ext.junitJupiterVersion  = '5.1.0'
ext.log4jVersion         = '2.9.0'

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'org.junit.platform.gradle.plugin'

// jar Release
jar {
    baseName = 'WebMiner'
    version =  '1.0.0' // first application version
}

compileTestJava {
    sourceCompatibility =  sourceComp
    targetCompatibility = targetComp
}

junitPlatform {
    // platformVersion '1.1.0'
    filters {
        engines {
            include 'junit-jupiter', 'junit-vintage'
        }
        tags {
            // include 'tagX'
            // exclude 'tagY'
        }
        // includeClassNamePattern '.*Test'
    }
    reportsDir file('build/test-results/junit-platform') // this is the default
}

dependencies {
    //Add JUnit Jupiter API and TestEngine implementation and api to classpath
    testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")

    // support JUnit 3 and JUnit 4 tests by adding junit 4 to classpath and vintage engine
    testCompile("junit:junit:${junit4Version}")
    testRuntime("org.junit.vintage:junit-vintage-engine:${junitVintageVersion}")

    // Only needed to run tests in an (IntelliJ) IDE(A) that bundles an older version
    testRuntime("org.junit.platform:junit-platform-launcher:${junitPlatformVersion}")
}


// GRADLE Wrapper
task wrapper(type: Wrapper) {
    gradleVersion = '4.5.1'
}
